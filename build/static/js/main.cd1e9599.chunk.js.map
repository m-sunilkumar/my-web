{"version":3,"sources":["assets/linkedin.svg","assets/facebook.svg","assets/instagram.svg","components/home/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","profile","bioData","projectDetails","skills","workExperience","educations","interestAndHobbies","overview","className","data-aos","map","exp","i","title","role","item","idx","index","prj","ind","client","desc","href","alt","src","lnkdnIcon","fbIcon","instaIcon","App","AOS","init","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"o1HAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,mOCsH5BC,G,MA9GF,WAAO,IAEhBC,EAOEC,EAPFD,QACAE,EAMED,EANFC,eACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,eACAC,EAGEJ,EAHFI,WACAC,EAEEL,EAFFK,mBAEEL,EADFM,SAEF,OACE,0BAAMC,UAAU,uBACd,6BAASA,UAAU,WAAWC,WAAS,WACrC,yBAAKD,UAAU,gBAAgBR,IAEjC,6BAASQ,UAAU,cACjB,wBAAIA,UAAU,kBAAd,mBACA,yBAAKA,UAAU,kBACZJ,EAAeM,KAAI,SAACC,EAAKC,GAAN,OAClB,oCACE,4BAAKD,EAAIE,OACT,4BACGF,EAAIG,KAAKJ,KAAI,SAACK,EAAMC,GAAP,OACZ,4BAAKD,aAOjB,6BAASP,UAAU,SACjB,wBAAIA,UAAU,kBAAd,UACA,yBAAKA,UAAU,eACZL,EAAOO,KAAI,SAACK,EAAME,GAAP,OACV,4BACE,wBAAIT,UAAU,kBAAkBO,SAKxC,6BAASP,UAAU,YACjB,wBAAIA,UAAU,kBAAd,YACA,yBAAKA,UAAU,iBACZN,EAAeQ,KAAI,SAACQ,EAAKC,GAAN,OAClB,4BACE,wBAAIX,UAAU,sBACZ,4BAAKU,EAAIL,OACT,6BACE,2CACCK,EAAIE,QAEP,6BACE,yCACCF,EAAIJ,MAEP,6BACE,gDACCI,EAAIG,aAOjB,6BAASb,UAAU,aACjB,wBAAIA,UAAU,kBAAd,cACCH,EAAWK,KAAI,SAACK,EAAMH,GAAP,OACd,uBAAGJ,UAAU,yBAAyBO,OAG1C,6BAASP,UAAU,cACjB,wBAAIA,UAAU,kBAAd,yBACA,yBAAKA,UAAU,yBACb,2BAAIF,KAGR,6BAASE,UAAU,UACjB,2DACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,+CACA,qDACA,yBAAKA,UAAU,aACb,uCADF,+BAGA,yBAAKA,UAAU,aACb,yCADF,IAEE,uFAGJ,yBAAKA,UAAU,gBACb,0CACA,yBAAKA,UAAU,kBACb,uBAAGc,KAAK,8DACN,yBAAKC,IAAI,SAASC,IAAKC,OAEzB,uBAAGH,KAAK,2DACN,yBAAKC,IAAI,KAAKC,IAAKE,OAErB,uBAAGJ,KAAK,8CACN,yBAAKC,IAAI,QAAQC,IAAKG,c,sBC3FvBC,MAZf,WAEE,OADAC,IAAIC,OAEF,yBAAKtB,UAAU,WACb,4BAAQA,UAAU,KAClB,iCACE,kBAAC,EAAD,SCCYuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cd1e9599.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedin.ab46037f.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.d3d5088f.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.15bc5470.svg\";","import React from \"react\";\nimport bioData from \"../../data/data.json\";\nimport lnkdnIcon from \"../../assets/linkedin.svg\";\nimport fbIcon from \"../../assets/facebook.svg\";\nimport instaIcon from \"../../assets/instagram.svg\";\n\nimport \"./home.css\";\n\nconst Home = () => {\n  const {\n    profile,\n    projectDetails,\n    skills,\n    workExperience,\n    educations,\n    interestAndHobbies,\n    overview\n  } = bioData;\n  return (\n    <main className=\"home-page-container\">\n      <section className=\"overview\" data-aos=\"fade-up\">\n        <div className=\"profile-wrap\">{profile}</div>\n      </section>\n      <section className=\"experience\">\n        <h2 className=\"section-header\">WORK EXPERIENCE</h2>\n        <div className=\"expericne-wrap\">\n          {workExperience.map((exp, i) => (\n            <>\n              <h3>{exp.title}</h3>\n              <ul>\n                {exp.role.map((item, idx) => (\n                  <li>{item}</li>\n                ))}\n              </ul>\n            </>\n          ))}\n        </div>\n      </section>\n      <section className=\"skils\">\n        <h2 className=\"section-header\">SKILLS</h2>\n        <div className=\"skills-wrap\">\n          {skills.map((item, index) => (\n            <ul>\n              <li className=\"skill-set-item\">{item}</li>\n            </ul>\n          ))}\n        </div>\n      </section>\n      <section className=\"projects\">\n        <h2 className=\"section-header\">PROJECTS</h2>\n        <div className=\"projects-wrap\">\n          {projectDetails.map((prj, ind) => (\n            <ul>\n              <li className=\"projects-wrap-card\">\n                <h3>{prj.title}</h3>\n                <div>\n                  <strong>Client:</strong>\n                  {prj.client}\n                </div>\n                <div>\n                  <strong>Role:</strong>\n                  {prj.role}\n                </div>\n                <div>\n                  <strong>Description:</strong>\n                  {prj.desc}\n                </div>\n              </li>\n            </ul>\n          ))}\n        </div>\n      </section>\n      <section className=\"education\">\n        <h2 className=\"section-header\">EDUCATION </h2>\n        {educations.map((item, i) => (\n          <p className=\"interest-hobbies-list\">{item}</p>\n        ))}\n      </section>\n      <section className=\"extra-info\">\n        <h2 className=\"section-header\">Interest and Hobbies </h2>\n        <div className=\"interest-hobbies-list\">\n          <p>{interestAndHobbies}</p>\n        </div>\n      </section>\n      <section className=\"footer\">\n        <h1>Want to now more abou me...</h1>\n        <div className=\"about-info-wrap\">\n          <div className=\"contact-info\">\n            <h2>Contact Details</h2>\n            <div>Ph: (+91)-9108703737</div>\n            <div className=\"info-span\">\n              <span>Email</span>: sunilbhargav060@gmail.com\n            </div>\n            <div className=\"info-span\">\n              <span>Address</span>:\n              <p>#502, kundalahall colony, brookfield, bangalore-560037</p>\n            </div>\n          </div>\n          <div className=\"social-links\">\n            <h2>Find me on</h2>\n            <div className=\"scl-links-wrap\">\n              <a href=\"https://www.linkedin.com/in/sunilkumar-manjappa-23286612a/\">\n                <img alt=\"linkdn\" src={lnkdnIcon} />\n              </a>\n              <a href=\"https://www.facebook.com/profile.php?id=100003918397732\">\n                <img alt=\"fb\" src={fbIcon} />\n              </a>\n              <a href=\"https://www.instagram.com/sunil_kumar_060/\">\n                <img alt=\"insta\" src={instaIcon} />\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./components/home/home\";\nimport AOS from 'aos'\nimport \"./App.css\";\n\nfunction App() {\n  AOS.init()\n  return (\n    <div className=\"web-app\">\n      <header className=\"\"></header>\n      <section>\n        <Home />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}